name: Build and Package VS Code Extension

on:
  push:
    branches:
      - main
      - "feature/*"  # You can adjust this to the branches you want to trigger the build on
  workflow_dispatch:

jobs:
  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Read base version from package.json
        id: get-version
        run: |
          echo "Base version: $(node -p "require('./package.json').version")"
          echo "BASE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          
      - name: Cache build number
        uses: actions/cache@v3
        id: build-number-cache
        with:
          path: buildNumber.txt
          key: build-number-cache-${{ github.run_id }}
          restore-keys: |
            build-number-cache-

      - name: Increment build number
        id: increment-build
        run: |
          if [ -f buildNumber.txt ]; then
            build_number=$(cat buildNumber.txt)
            build_number=$((build_number + 1))
          else
            build_number=1
          fi
          echo "$build_number" > buildNumber.txt
          echo "BUILD_NUMBER=$build_number" >> $GITHUB_ENV
          echo "::set-output name=build_number::$build_number"
          echo "New build number: $build_number"

      - name: Update version in package.json
        run: |
          version=$(jq -r '.version' package.json)
          new_version="${version}-build.${{ env.BUILD_NUMBER }}"
          jq --arg new_version "$new_version" '.version = $new_version' package.json > package.tmp.json
          mv package.tmp.json package.json
          echo "Updated version to $new_version"

      - name: Package VSIX
        run: |
          npm install -g @vscode/vsce
          vsce package --out vscode-sema4ai-client-${{ env.BASE_VERSION }}-build.${{ env.BUILD_NUMBER }}.vsix

      - name: Upload VSIX Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package
          path: vscode-sema4ai-client-${{ env.BASE_VERSION }}-build.${{ env.BUILD_NUMBER }}.vsix
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::710450854638:role/github-action-data-explorer
      - name: Upload versined VSIX to S3
        run: |
          S3_BASE_URL="s3://downloads.robocorp.com/sema4-data-explorer/alpha"
          aws s3 cp vscode-sema4ai-client-${{ env.BASE_VERSION }}-build.${{ env.BUILD_NUMBER }}.vsix "$S3_BASE_URL/vscode-sema4ai-client-${{ env.BASE_VERSION }}-build.${{ env.BUILD_NUMBER }}.vsix"
          aws s3 cp buildNumber.txt "$S3_BASE_URL/"
      - name: Create or Update 'latest.vsix' alias in S3
        run: |
          S3_BASE_URL="s3://downloads.robocorp.com/sema4-data-explorer/alpha"
          aws s3 cp "$S3_BASE_URL/vscode-sema4ai-client-${{ env.BASE_VERSION }}-build.${{ env.BUILD_NUMBER }}.vsix" "$S3_BASE_URL/vscode-sema4ai-client.vsix" \
            --metadata-directive REPLACE \
            --content-disposition "attachment; filename=vscode-sema4ai-client-${{ env.BASE_VERSION }}-build.${{ env.BUILD_NUMBER }}.vsix"

  notify:
    runs-on: ubuntu-latest
    needs: build  # Ensures this job runs after the 'build' job
    if: always()  # Ensures notification runs regardless of success or failure

    steps:
      - name: Send notification to Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
        run: |
          BUILD_NUMBER="${{ steps.increment-build.outputs.build_number }}"
          if [ "${{ needs.build.result }}" == "success" ]; then
            STATUS="SUCCESS"
            BUILD_MSG="Build Number: *$BUILD_NUMBER*"
            DOWNLOAD_MSG="Download: <https://cdn.sema4.ai/sema4-data-explorer/alpha/vscode-sema4ai-client.vsix|Download Latest VSIX>"
          else
            STATUS="FAILURE"
            BUILD_MSG=""
            DOWNLOAD_MSG=""
          fi
          
          MESSAGE="Build Status: *$STATUS*\nJob: *${{ github.workflow}}*\nRun ID: *${{github.run_id}}*\n$BUILD_MSG\n$DOWNLOAD_MSG"
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\": \"${MESSAGE}\"}" $SLACK_WEBHOOK_URL
        
